#!/bin/bash -efu
# SPDX-License-Identifier: GPL-2.0

PROG="${0##*/}"

show_help()
{
	cat <<-EOF
	Usage: $PROG [<option>] [remotename ...]

	Options:
	   -c NUM   by default the command shows all refs;
	   -h       display this help and exit.

	Report bugs to authors.

	EOF
	exit
}

message()
{
	printf >&2 '%s: %s\n' "$PROG" "$*"
}

show_usage()
{
	[ -z "$*" ] || message "$*"
	echo "Try \`$PROG -h' for more information." >&2
	exit 1
}

count=
while getopts c:h o; do
	case "$o" in
		c)
			count="$OPTARG"
			;;
		h)
			show_help
			;;
		*)
			show_usage
			;;
	esac
	shift
done

[ "$#" != 0 ] ||
	set -- $(git remote)

tty -s &&
	color=always ||
	color=auto

ColorRName=
ColorReset=

if [ "$color" = always ]; then
	ColorRName="$(git config --get-color "" "green")"
	ColorReset="$(git config --get-color "" "reset")"
fi

format=" %(creatordate:iso)"
format="$format %(color:yellow)%(objectname:short)%(color:reset)"
format="$format %(refname)"

second=
for name; do
	[ -z "$second" ] ||
		printf '\n'

	printf 'Remote "%s"\n' "${ColorRName}${name}${ColorReset}"

	[ "$count" != 0 ] ||
		continue

	fetch="$(git config "remote.$name.fetch")"
	fetch="${fetch#*:}"
	fetch="${fetch%/*}"

	git for-each-ref \
			--color="$color" \
			--format="$format" \
			--sort='-creatordate' \
			${count:+--count=$count} \
			"$fetch/" |
		tac

	second=1
done
